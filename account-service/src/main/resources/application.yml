server:
  port: 9003
spring:
  application:
    name: account-service

#  security:
#    oauth2:
#      client:
#        registration:
##          server-only:
#          server:
#            authorization-grant-type: client_credentials # TODO: delete unused row
#            client-id: server
#            client-secret: secret
#            provider: server
#        provider:
##          server-only:
#          server:
#            token-uri: http://localhost:9000/api/auth/token # TODO: change to auth-service uri

  datasource:
    url: jdbc:postgresql://localhost:5432/ms_account_service_db
    username: postgres
    password: root

  jpa:
    show-sql: true
    hibernate.ddl-auto: create
    properties.hibernate.enable_lazy_load_no_trans: true
    properties.hibernate.format_sql: true
    properties.hibernate.generate_statistics: false
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    properties.hibernate.jdbc.batch_size: 20
    properties.hibernate.order_inserts: true
    properties.hibernate.order_updates: true
    properties.hibernate.jdbc.batch_versioned_data: true
    properties.hibernate.temp.use_jdbc_metadata_defaults: false

eureka:
  instance:
    instance-id: ${spring.application.name}-${random.uuid}
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka/}

#security:
#  basic:
#    enable: false


client_id: server
client_credential: secret
check_authorization_url: http://localhost:9000/api/auth/check_token  # TODO: change to auth-service uri
token_uri: http://localhost:9000/api/auth/token # TODO: change to auth-service uri
resources_id: apis